[{"C:\\Users\\37158\\ach\\src\\index.js":"1","C:\\Users\\37158\\ach\\src\\App.js":"2","C:\\Users\\37158\\ach\\src\\reportWebVitals.js":"3","C:\\Users\\37158\\ach\\src\\components\\RepositoryList.js":"4","C:\\Users\\37158\\ach\\src\\components\\Header.js":"5","C:\\Users\\37158\\ach\\src\\components\\Footer.js":"6","C:\\Users\\37158\\ach\\src\\Timeline.js":"7","C:\\Users\\37158\\ach\\src\\Root.js":"8","C:\\Users\\37158\\ach\\src\\DetailsPage.js":"9","C:\\Users\\37158\\ach\\src\\FilterModal.js":"10","C:\\Users\\37158\\ach\\src\\FormularAltTextsPage.js":"11"},{"size":632,"mtime":1699280265610,"results":"12","hashOfConfig":"13"},{"size":3288,"mtime":1700057819380,"results":"14","hashOfConfig":"13"},{"size":362,"mtime":1698760208845,"results":"15","hashOfConfig":"13"},{"size":469,"mtime":1698761633149,"results":"16","hashOfConfig":"13"},{"size":664,"mtime":1699989548711,"results":"17","hashOfConfig":"13"},{"size":244,"mtime":1698761633148,"results":"18","hashOfConfig":"13"},{"size":2199,"mtime":1699487351089,"results":"19","hashOfConfig":"13"},{"size":396,"mtime":1698787304685,"results":"20","hashOfConfig":"13"},{"size":2499,"mtime":1699484869827,"results":"21","hashOfConfig":"13"},{"size":2442,"mtime":1700058939755,"results":"22","hashOfConfig":"13"},{"size":824,"mtime":1700057777505,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},"152cplp",{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"27"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\37158\\ach\\src\\index.js",[],[],["60"],"C:\\Users\\37158\\ach\\src\\App.js",["61","62","63","64","65"],[],"C:\\Users\\37158\\ach\\src\\reportWebVitals.js",[],[],"C:\\Users\\37158\\ach\\src\\components\\RepositoryList.js",[],[],"C:\\Users\\37158\\ach\\src\\components\\Header.js",[],[],"C:\\Users\\37158\\ach\\src\\components\\Footer.js",[],[],"C:\\Users\\37158\\ach\\src\\Timeline.js",[],[],"C:\\Users\\37158\\ach\\src\\Root.js",[],[],["66"],"C:\\Users\\37158\\ach\\src\\DetailsPage.js",["67"],[],"import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\r\nimport './DetailsPage.css';\r\n// Simulated function to fetch details based on an ID\r\nconst fetchDetails = (id) => {\r\n  // This is where you would fetch data from a server or select from a local source\r\n  // For demonstration, it returns different data sets based on the ID\r\n  const datasets = {\r\n    'arXiv': [\r\n      { year: 2016, formula: 40, figure: 24, table: 24 },\r\n      { year: 2017, formula: 30, figure: 13, table: 22 },\r\n      { year: 2018, formula: 60, figure: 10, table: 23 }\r\n      // ... rest of data\r\n    ],\r\n    'pubMed': [\r\n      // ... specific data for pubMed\r\n    ],\r\n    // ... other datasets\r\n  };\r\n\r\n  return datasets[id] || []; // Return the dataset or an empty array if not found\r\n};\r\n\r\nconst DetailsPage = () => {\r\n  let { id } = useParams();\r\n  const [detailsData, setDetailsData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const data = fetchDetails(id);\r\n    setDetailsData(data);\r\n  }, [id]);\r\n\r\n  return (\r\n    <div className=\"details-page\">\r\n      <header className=\"App-header\">\r\n          <div className=\"header-content\">\r\n            <div className=\"App-logo\">Accessibility Hub</div>\r\n            <div className=\"intro-and-filter\">\r\n              <div className=\"intro-text\">\r\n                <h2>{id}</h2>\r\n                <p>This is the detail score fraction from {id}.</p>\r\n              </div>\r\n              <button className=\"filter-button\">+ Filter</button>\r\n            </div>\r\n          </div>\r\n        </header>\r\n      \r\n      <div className=\"detail-chart\">\r\n      <BarChart width={800} height={450} data={detailsData} margin={{ top: 20, right: 30, left: 20, bottom: 5 }}>\r\n        <CartesianGrid strokeDasharray=\"3 3\" />\r\n        <XAxis dataKey=\"year\" />\r\n        <YAxis />\r\n        <Tooltip />\r\n        <Legend />\r\n        <Bar dataKey=\"formula\" stackId=\"a\" fill=\"#1e2f97\" barSize={50}/>\r\n        <Bar dataKey=\"figure\" stackId=\"a\" fill=\"#1aa7ec\" barSize={50}/>\r\n        <Bar dataKey=\"table\" stackId=\"a\" fill=\"#4adede\" barSize={50}/>\r\n      </BarChart>\r\n      </div>\r\n      {/* ... */}\r\n      <footer className=\"footer\">\r\n          <p>Have any problems with our APP?</p>\r\n          <a href=\"#\" className=\"App-link\">Contact Us</a>\r\n          <p>Data Privacy Statement</p>\r\n          <p>LOGO?</p>\r\n      </footer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DetailsPage;\r\n","C:\\Users\\37158\\ach\\src\\FilterModal.js",[],[],"C:\\Users\\37158\\ach\\src\\FormularAltTextsPage.js",[],[],{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","severity":1,"message":"71","line":1,"column":27,"nodeType":"72","messageId":"73","endLine":1,"endColumn":36},{"ruleId":"70","severity":1,"message":"74","line":6,"column":8,"nodeType":"72","messageId":"73","endLine":6,"endColumn":12},{"ruleId":"70","severity":1,"message":"75","line":11,"column":27,"nodeType":"72","messageId":"73","endLine":11,"endColumn":33},{"ruleId":"70","severity":1,"message":"76","line":11,"column":50,"nodeType":"72","messageId":"73","endLine":11,"endColumn":54},{"ruleId":"77","severity":1,"message":"78","line":86,"column":11,"nodeType":"79","endLine":86,"endColumn":44},{"ruleId":"68","replacedBy":"80"},{"ruleId":"77","severity":1,"message":"78","line":64,"column":11,"nodeType":"79","endLine":64,"endColumn":44},"no-new-object",["81"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'Papa' is defined but never used.","'Router' is defined but never used.","'Link' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement",["81"],"no-object-constructor"]